{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\n// -----------------------------------------\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = 'http://localhost:3000/api/orders';\n    }\n    /**\r\n     * --- THIS IS THE NEW METHOD ---\r\n     * Fetches the order history for the currently logged-in user.\r\n     * @returns An Observable array of Orders.\r\n     */\n    getOrders() {\n      const token = this.authService.getToken();\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      // Makes a GET request to /api/orders\n      return this.http.get(this.apiUrl, {\n        headers: headers\n      });\n    }\n    /**\r\n     * Places a new order by sending the cart items to the backend.\r\n     * (This is your existing method).\r\n     * @param items The array of CartItem objects from the shopping cart.\r\n     * @returns An Observable with the response from the server.\r\n     */\n    placeOrder(items) {\n      const token = this.authService.getToken();\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      });\n      const body = {\n        items: items\n      };\n      // Makes a POST request to /api/orders\n      return this.http.post(this.apiUrl, body, {\n        headers: headers\n      });\n    }\n    static {\n      this.ɵfac = function OrderService_Factory(t) {\n        return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: OrderService,\n        factory: OrderService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}