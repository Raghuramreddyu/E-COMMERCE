{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginPageComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginError, \" \");\n  }\n}\nexport class LoginPageComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.isLoading = false;\n    this.loginError = null;\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.loginError = null;\n    this.authService.login(this.loginForm.value).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.router.navigate(['/kits']);\n      },\n      error: err => {\n        this.isLoading = false;\n        this.loginError = 'Invalid email or password. Please try again.';\n        console.error('Login failed', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginPageComponent_Factory(t) {\n      return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginPageComponent,\n      selectors: [[\"app-login-page\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 19,\n      vars: 4,\n      consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"autocomplete\", \"email\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"autocomplete\", \"current-password\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [1, \"auth-switch\"], [\"routerLink\", \"/register\"], [1, \"error-message\"]],\n      template: function LoginPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, LoginPageComponent_div_12_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementStart(13, \"button\", 8);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"p\", 9);\n          i0.ɵɵtext(16, \"Don't have an account? \");\n          i0.ɵɵelementStart(17, \"a\", 10);\n          i0.ɵɵtext(18, \"Register\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterModule, i3.RouterLink],\n      styles: [\"h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 2rem;\\n    font-weight: 700;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n    color: #f87171; \\n    background-color: rgba(248, 113, 113, 0.1);\\n    border: 1px solid #f87171;\\n    border-radius: 8px;\\n    padding: 1rem;\\n    margin-bottom: 1rem;\\n    text-align: center;\\n}\\n\\n.auth-switch[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-top: 1.5rem;\\n}\\n\\n.auth-switch[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYyxFQUFFLCtCQUErQjtJQUMvQywwQ0FBMEM7SUFDMUMseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiAjZjg3MTcxOyAvKiBBIHJlZGRpc2ggY29sb3IgZm9yIGVycm9ycyAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ4LCAxMTMsIDExMywgMC4xKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZjg3MTcxO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYXV0aC1zd2l0Y2gge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAxLjVyZW07XG59XG5cbi5hdXRoLXN3aXRjaCBhIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAsBC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAC7E,SAAiBC,YAAY,QAAQ,iBAAiB;;;;;;;;IAsB9CC,+BAA8C;IAC5CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,kDACF;;;AAWR,OAAM,MAAOC,kBAAkB;EAS7BC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAXhB,cAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACxBC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;IAEF,cAAS,GAAG,KAAK;IACjB,eAAU,GAAkB,IAAI;EAM7B;EAEHE,QAAQ;IACN,IAAI,IAAI,CAACC,SAAS,CAACC,OAAO,EAAE;MAAE;;IAE9B,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,UAAU,GAAG,IAAI;IAEtB,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC,IAAI,CAACJ,SAAS,CAACK,KAAwB,CAAC,CAACC,SAAS,CAAC;MACxEC,IAAI,EAAE,MAAK;QACT,IAAI,CAACL,SAAS,GAAG,KAAK;QACtB,IAAI,CAACR,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACR,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,UAAU,GAAG,8CAA8C;QAChEQ,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEC,GAAG,CAAC;MACpC;KACD,CAAC;EACJ;;;uBAhCWpB,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAAsB;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UA3B3B7B,8BAA4B;UACtBA,qBAAK;UAAAA,iBAAK;UACdA,+BAAsD;UAAxBA;YAAA,OAAY8B,cAAU;UAAA,EAAC;UACnD9B,8BAAwB;UACHA,qBAAK;UAAAA,iBAAQ;UAEhCA,2BAAyF;UAC3FA,iBAAM;UACNA,8BAAwB;UACAA,yBAAQ;UAAAA,iBAAQ;UAEtCA,4BAAgH;UAClHA,iBAAM;UAENA,qEAEM;UAENA,kCAAsF;UACpFA,aACF;UAAAA,iBAAS;UACTA,6BAAuB;UAAAA,wCAAuB;UAAAA,8BAA0B;UAAAA,yBAAQ;UAAAA,iBAAI;;;UAnBhFA,eAAuB;UAAvBA,yCAAuB;UAYrBA,eAAgB;UAAhBA,qCAAgB;UAIoBA,eAA2C;UAA3CA,iEAA2C;UACnFA,eACF;UADEA,0EACF;;;qBAtBIJ,YAAY,WAAEC,mBAAmB,qIAAEE,YAAY;MAAAgC;IAAA;EAAA","names":["CommonModule","ReactiveFormsModule","Validators","RouterModule","i0","LoginPageComponent","constructor","fb","authService","router","group","email","required","password","onSubmit","loginForm","invalid","isLoading","loginError","login","value","subscribe","next","navigate","error","err","console","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["C:\\Woxsen\\DevOPS Project\\E-Commerce-Website\\frontend\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, UserCredentials } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  template: `\n    <div class=\"form-container\">\n      <h2>Login</h2>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <!-- THE FIX: Added name and autocomplete attributes -->\n          <input id=\"email\" type=\"email\" formControlName=\"email\" name=\"email\" autocomplete=\"email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <!-- THE FIX: Added name and autocomplete attributes -->\n          <input id=\"password\" type=\"password\" formControlName=\"password\" name=\"password\" autocomplete=\"current-password\">\n        </div>\n        \n        <div *ngIf=\"loginError\" class=\"error-message\">\n          {{ loginError }}\n        </div>\n        \n        <button class=\"btn-primary\" type=\"submit\" [disabled]=\"loginForm.invalid || isLoading\">\n          {{ isLoading ? 'Logging in...' : 'Login' }}\n        </button>\n        <p class=\"auth-switch\">Don't have an account? <a routerLink=\"/register\">Register</a></p>\n      </form>\n    </div>\n  `,\n  styleUrls: ['./login.component.css']\n})\nexport class LoginPageComponent {\n  loginForm = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n\n  isLoading = false;\n  loginError: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  onSubmit() {\n    if (this.loginForm.invalid) { return; }\n    \n    this.isLoading = true;\n    this.loginError = null;\n\n    this.authService.login(this.loginForm.value as UserCredentials).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.router.navigate(['/kits']);\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.loginError = 'Invalid email or password. Please try again.';\n        console.error('Login failed', err);\n      }\n    });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}