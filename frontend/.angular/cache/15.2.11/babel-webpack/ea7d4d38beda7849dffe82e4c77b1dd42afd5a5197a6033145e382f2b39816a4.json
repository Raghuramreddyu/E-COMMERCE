{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class RegisterPageComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value).subscribe({\n        next: () => this.router.navigate(['/login']),\n        error: err => console.error('Registration failed', err)\n      });\n    }\n  }\n  static {\n    this.ɵfac = function RegisterPageComponent_Factory(t) {\n      return new (t || RegisterPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterPageComponent,\n      selectors: [[\"app-register-page\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 2,\n      consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"auth-switch\"], [\"routerLink\", \"/login\"]],\n      template: function RegisterPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Create Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterPageComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 7);\n          i0.ɵɵtext(13, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"p\", 8);\n          i0.ɵɵtext(15, \"Already have an account? \");\n          i0.ɵɵelementStart(16, \"a\", 9);\n          i0.ɵɵtext(17, \"Login\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n        }\n      },\n      dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterModule, i3.RouterLink],\n      styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n    max-width: 400px;\\r\\n    margin: 2rem auto;\\r\\n    padding: 2rem;\\r\\n    border: 1px solid var(--subtle-borders);\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.auth-switch[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-top: 1.5rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHVDQUF1QztJQUN2QyxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tc3VidGxlLWJvcmRlcnMpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGgyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbn1cclxuXHJcbi5hdXRoLXN3aXRjaCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxLjVyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAsBC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAC7E,SAAiBC,YAAY,QAAQ,iBAAiB;;;;;AA0BtD,OAAM,MAAOC,qBAAqB;EAMhCC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IARhB,iBAAY,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC3BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EAMC;EAEHC,QAAQ;IACN,IAAI,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACT,WAAW,CAACU,QAAQ,CAAC,IAAI,CAACF,YAAY,CAACG,KAAK,CAAC,CAACC,SAAS,CAAC;QAC3DC,IAAI,EAAE,MAAM,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC5CC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEC,GAAG;OACzD,CAAC;;EAEN;;;uBAnBWnB,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UAlB9BC,8BAA4B;UACtBA,8BAAc;UAAAA,iBAAK;UACvBA,+BAAyD;UAAxBA;YAAA,OAAYC,cAAU;UAAA,EAAC;UACtDD,8BAAwB;UACHA,qBAAK;UAAAA,iBAAQ;UAChCA,2BAAuD;UACzDA,iBAAM;UACNA,8BAAwB;UACAA,yBAAQ;UAAAA,iBAAQ;UACtCA,4BAAgE;UAClEA,iBAAM;UACNA,kCAAwD;UAAAA,yBAAQ;UAAAA,iBAAS;UACzEA,6BAAuB;UAAAA,0CAAyB;UAAAA,6BAAuB;UAAAA,sBAAK;UAAAA,iBAAI;;;UAV5EA,eAA0B;UAA1BA,4CAA0B;UASRA,eAAiC;UAAjCA,mDAAiC;;;qBAbnDhC,YAAY,EAAEC,mBAAmB,qIAAEE,YAAY;MAAA+B;IAAA;EAAA","names":["CommonModule","ReactiveFormsModule","Validators","RouterModule","RegisterPageComponent","constructor","fb","authService","router","group","email","required","password","minLength","onSubmit","registerForm","valid","register","value","subscribe","next","navigate","error","err","console","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\91630\\OneDrive\\Desktop\\E-Commerce-Website\\frontend\\src\\app\\pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n  template: `\r\n    <div class=\"form-container\">\r\n      <h2>Create Account</h2>\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n        </div>\r\n        <button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\r\n        <p class=\"auth-switch\">Already have an account? <a routerLink=\"/login\">Login</a></p>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterPageComponent {\r\n  registerForm = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.valid) {\r\n      this.authService.register(this.registerForm.value).subscribe({\r\n        next: () => this.router.navigate(['/login']),\r\n        error: (err) => console.error('Registration failed', err)\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}