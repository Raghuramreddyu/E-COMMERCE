{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = 'http://localhost:3000/api/products';\n    }\n    // Fetches an array of all products for the customer-facing page\n    getProducts() {\n      return this.http.get(this.apiUrl);\n    }\n    // Fetches a single product by its ID\n    getProduct(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    // Adds a new product (Admin only)\n    // It correctly expects a Product object WITHOUT an 'id'\n    addProduct(productData) {\n      return this.http.post(this.apiUrl, productData, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.authService.getToken()}`\n        })\n      });\n    }\n    // Deletes a product (Admin only)\n    deleteProduct(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `Bearer ${this.authService.getToken()}`\n        })\n      });\n    }\n    static {\n      this.ɵfac = function ProductService_Factory(t) {\n        return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProductService,\n        factory: ProductService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}