{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginPageComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginError, \" \");\n  }\n}\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n      this.isLoading = false;\n      this.loginError = null;\n    }\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      this.isLoading = true;\n      this.loginError = null;\n      this.authService.login(this.loginForm.value).subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.router.navigate(['/kits']);\n        },\n        error: err => {\n          this.isLoading = false;\n          this.loginError = 'Invalid email or password. Please try again.';\n          console.error('Login failed', err);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginPageComponent_Factory(t) {\n        return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginPageComponent,\n        selectors: [[\"app-login-page\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 19,\n        vars: 4,\n        consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"autocomplete\", \"email\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"autocomplete\", \"current-password\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [1, \"auth-switch\"], [\"routerLink\", \"/register\"], [1, \"error-message\"]],\n        template: function LoginPageComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, LoginPageComponent_div_12_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementStart(13, \"button\", 8);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"p\", 9);\n            i0.ɵɵtext(16, \"Don't have an account? \");\n            i0.ɵɵelementStart(17, \"a\", 10);\n            i0.ɵɵtext(18, \"Register\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterModule, i3.RouterLink],\n        styles: [\"h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:2rem;font-weight:700}.error-message[_ngcontent-%COMP%]{color:#f87171;background-color:#f871711a;border:1px solid #f87171;border-radius:8px;padding:1rem;margin-bottom:1rem;text-align:center}.auth-switch[_ngcontent-%COMP%]{text-align:center;margin-top:1.5rem}.auth-switch[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-weight:500}\"]\n      });\n    }\n  }\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}